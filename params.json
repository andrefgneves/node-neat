{"name":"node-neat","tagline":"A node-sass port of Bourbon Neat.","body":"[![Bourbon Neat](http://neat.bourbon.io/images/logotype.svg)](http://thoughtbot.com/neat)\r\n\r\n*This is a node-sass port of the [Neat](http://neat.bourbon.io) library. If you\r\nare looking for the original Ruby/Rails version, you can find it\r\n[here](https://github.com/thoughtbot/neat).*\r\n\r\n[![Build Status](https://travis-ci.org/lacroixdesign/node-neat.png?branch=master)](https://travis-ci.org/lacroixdesign/node-neat)\r\n\r\n# Contents\r\n\r\n- [Requirements](#requirements)\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n  - [Basic Usage](#basic-usage)\r\n  - [gulp.js](#gulpjs-usage)\r\n  - [Grunt](#grunt-usage)\r\n  - [node-sass](#node-sass-usage)\r\n- [Getting Help](#getting-help)\r\n- [Testing](#testing)\r\n- [Credits](#credits)\r\n- [License](#license)\r\n\r\n# Requirements\r\n- [node](http://nodejs.org)\r\n- [gulp.js](http://gulpjs.com) -or- [Grunt](http://gruntjs.com) -or- [node-sass](https://github.com/andrew/node-sass)\r\n\r\n# Installation\r\n\r\nTo install as a development dependency, run:\r\n\r\n```bash\r\nnpm install --save-dev node-neat\r\n```\r\n\r\nIf you need it in production, replace `--save-dev` with `--save`.\r\n\r\n# Usage\r\n\r\n## Basic Usage\r\n\r\nTo use `node-neat` with tools like [gulp.js](#gulpjs-usage), [Grunt](#grunt-usage), or directly with [node-sass](#node-sass-usage), provide the path to Neat in your Sass config. There are a couple of convenience methods for this, depending on whether you want Sass to include additional directories or not.\r\n\r\n### with() Function\r\n\r\nThe `with()` function will include any additional paths you pass as arguments.\r\n\r\nReturns an array of paths.\r\n\r\n```javascript\r\nvar neat = require('node-neat');\r\n// Any of these will return an array of Neat & Bourbon's paths plus your custom path(s)\r\nneat.with('path/to/stylesheets')\r\nneat.with('path/to/stylesheets1', 'path/to/stylesheets2')\r\nneat.with(['path/to/stylesheets1', 'path/to/stylesheets2'])\r\n```\r\n\r\n### includePaths Property\r\n\r\nThe `includePaths` property returns an array of Neat & Bourbon's paths to use in your config.\r\n\r\n```javascript\r\nvar neat = require('node-neat');\r\nneat.includePaths // Array of Neat paths\r\n```\r\n\r\n### Stylesheet usage\r\n\r\nUse either method above with the Sass config for your chosen tool (gulp.js, Grunt, etc.), then it's business as usual for Neat & Bourbon in your stylesheet:\r\n\r\n```scss\r\n@import \"bourbon\";\r\n@import \"neat\";\r\n```\r\n\r\n## gulp.js Usage\r\n\r\nUsing the [gulp-sass](https://github.com/dlmanning/gulp-sass) plugin.\r\n\r\n```javascript\r\nvar gulp = require('gulp');\r\nvar sass = require('gulp-sass');\r\n\r\ngulp.task('sass', function () {\r\n  gulp.src('path/to/input.scss')\r\n    .pipe(sass({\r\n      // includePaths: require('node-neat').with('other/path', 'another/path')\r\n      // - or -\r\n      includePaths: require('node-neat').includePaths\r\n    }))\r\n    .pipe(gulp.dest('path/to/output.css'));\r\n});\r\n```\r\n\r\n## Grunt Usage\r\n\r\n### Using *grunt-sass*\r\n\r\nThe [grunt-sass](https://github.com/sindresorhus/grunt-sass) task uses\r\n[node-sass](https://github.com/andrew/node-sass)\r\n([LibSass](https://github.com/hcatlin/libsass)) underneath, and is the recommended\r\nway to use Grunt with node-neat.\r\n\r\nExample config:\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n  sass: {\r\n    dist: {\r\n      options: {\r\n        // includePaths: require('node-neat').with('other/path', 'another/path')\r\n        // - or -\r\n        includePaths: require('node-neat').includePaths\r\n      },\r\n      files: {\r\n        'path/to/output.css': 'path/to/input.scss'\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n### Using *grunt-contrib-sass*\r\n\r\nIf you are using the Ruby version of Sass with node-neat, then you will need to use\r\nthe [grunt-contrib-sass](https://github.com/gruntjs/grunt-contrib-sass) task instead.\r\n\r\n*Note that node-neat is __NOT__ tested against the __Ruby__ version – only against __LibSass__.*\r\n\r\nExample config:\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n  sass: {\r\n    dist: {\r\n      options: {\r\n        // loadPath: require('node-neat').with('other/path', 'another/path')\r\n        // - or -\r\n        loadPath: require('node-neat').includePaths\r\n      },\r\n      files: {\r\n        'path/to/output.css': 'path/to/input.scss'\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n## node-sass Usage\r\n\r\nUsing it directly with [node-sass](https://github.com/andrew/node-sass).\r\n\r\n```javascript\r\nvar sass    = require('node-sass')\r\nvar neat = require('node-neat');\r\n\r\nsass.render({\r\n  file: './application.scss',\r\n  success: function(css){\r\n    console.log(css);\r\n  },\r\n  error: function(error) {\r\n    console.log(error);\r\n  },\r\n  // includePaths: neat.with('other/path', 'another/path'),\r\n  // - or -\r\n  includePaths: neat.includePaths,\r\n  outputStyle: 'compressed'\r\n});\r\n```\r\n\r\n# Getting Help\r\n\r\nFeel free to tweet me with questions [@iamlacroix](https://twitter.com/iamlacroix), or [open a ticket](https://github.com/lacroixdesign/node-neat/issues) on GitHub.\r\n\r\n# Testing\r\n\r\n`node-neat` is tested against the examples provided in the \r\n[Neat documentation](http://neat.bourbon.io/docs). The tests check for compile \r\nerrors, so if a feature compiles but the expected output is incorrect, be sure \r\nto [open a ticket](https://github.com/lacroixdesign/node-neat/issues).\r\n\r\nRun the tests with:\r\n\r\n```\r\nmake test\r\n```\r\n\r\n# Credits\r\n\r\nThis node-sass port is maintained by Michael LaCroix, however all credits for\r\nthe Bourbon Neat library go to [thoughtbot, inc](http://thoughtbot.com/community):\r\n\r\n> ![thoughtbot](http://thoughtbot.com/images/tm/logo.png)\r\n>\r\n> Neat is maintained and funded by [thoughtbot, inc](http://thoughtbot.com/community). Tweet your questions or suggestions at [@kaishin](https://twitter.com/kaishin) and [@kylefiedler](https://twitter.com/kylefiedler).\r\n\r\n# License\r\n\r\nnode-neat is Copyright © 2013-2014 Michael LaCroix. It is free software, and may be redistributed under the terms specified in the LICENSE file.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}